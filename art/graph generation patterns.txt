~~~~~~~~~~~~~~~~~_____~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~/ 18  \~~~~~~~~~~~~~~~~
~~~~~~~~~~_____/ Woods \_____~~~~~~~~~~
~~~~~~~~~/ 17  \   9   /  7  \~~~~~~~~~
~~~_____/ Sheep \_____/ Brick \_____~~~
~~/ 16  \   2   /  6  \  10   /  8  \~~
~/ Mount \_____/ Sheep \_____/ Mount \~
~\  10   /  5  \   4   /  1  \   8   /~
~~\_____/ Brick \_____/ Woods \_____/~~
~~/ 15  \   6   /  0  \   3   /  9  \~~
~/ Wheat \_____/ Deser \_____/ Sheep \~
~\  12   /  4  \   7   /  2  \   5   /~
~~\_____/ Woods \_____/ Wheat \_____/~~
~~/ 14  \  11   /  3  \   4   / 10  \~~
~/ Wheat \_____/ Mount \_____/ Sheep \~
~\   9   / 13  \   3   / 11  \  11   /~
~~\_____/ Woods \_____/ Wheat \_____/~~
~~~~~~~~\   8   / 12  \   6   /~~~~~~~~
~~~~~~~~~\_____/ Brick \_____/~~~~~~~~~
~~~~~~~~~~~~~~~\   5   /~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~\_____/~~~~~~~~~~~~~~~~

Edges(roads) Pattern:

T[i]{v1;v2} - Add road {v1,v2} to Tile i. v1,v2 are vertices from T[v1] T[v2]

i=0:
0{5;0} 1{0;1} 2{1;2} 3{2;3} 4{3;4} 5{4;5}
=>
for j=0 TO 5:
     p = (j+5)%6
     0[j] = j[(j+3)%6] = (p, j)

i=1:
5{4;5} 0{5;0} 1{0;1} 2{1;2}
i=2:
0{5;0} 1{0;1} 2{1;2} 3{2;4}
i=6:
4{3;4} 5{4;5} 0{5;0} 1{0;1}
=>
for i=1 TO 6:
     for j=i TO i+4:
          p = (j+5)%6
          i[j%6] = j[(j+3)%6] = (p, j%6)

i=7:
5{4;5} 0{5;0} 1{0;1}
i=8:
5{4;5} 0{5;0} 1{0;1} 2{1;2}
i=9:
0{5;0} 1{0;1} 2{1;2}
i=10:
0{5;0} 1{0;1} 2{1;2} 3{2;3}
i=17:
4{3;4} 5{4;5} 0{5;0}
i=18:
4{3;4} 5{4;5} 0{5;0} 1{0;1}
=>
for i=7 TO 18:
     s = ((i+3)/2)%6
     for j=s TO s+3:
          p = (j+5)%6
          i[j%6] = j[(j+3)%6] = (p, j%6)
     if (i even) i[(s+4)%6] = j[(s+1)%6] = (p(j+5)%6, (s+4)%6)


Vertices(Buildings) Pattern:
Tile.Buildings indicies are +2 of eachother
So for example, {0;1;2} is in T[0].B[1], T[1].B[3], T[2].B[5]
The Buildings Triplet is stored Clock-Wise.

T[i][t1;t2;t3] -> Add vertex{t1,t2,t3} into index i of Tile T.
t1[i][t1;t2;t3] t2[j] t3[k] -> Add {t1,t2,t3} t1[i], t2[j], t3[k].

Do all 6 for i=0:
0{0;6;1} 6[2] 1[4]
1{0;1;2} 1[3] 2[4]
2{0;2;3} 2[4] 3[0]
3{0;3;4}
4{0;4;5}
5{0;5;6}
 =>
for j=1 TO 6: /*(j%6) [0;j;(j%6)+1];*/
     t2 = (j%6)+1
     v = {0; j; t2};
     0[j%6] = j[(j+2)%6] = t2[(j+4)%6] = v

i=1:
1{1;6;7} 1{2;7;8} 1{2;8;9}

i=2:
0{2;1;9} 1{2;9;10} 2{2;10;11}

i=3:
1{3;2;11} 2{3;11;12} 3{3;11;12}

i=5:
3{5;4;15} 4{5;15;16} 5{5;16;17}

i=6:
4{6;5;17} 5{6;17;18} 6{6;18;7}

=> for i=1 TO 6:
p = (i-7)%6 + 6
t2 = 5+2i; t3 = 6+2i; t4 = 7+(2i%12);
i[(i+4)%6] = p[i%6] = t2[(i+2)%6] = {i; p; t2}
i[(i+5)%6] = t2[(i+1)%6] = t3[(i+3)%6] = {i; t2; t3}
i[i] = t3[(i+2)%6] = t4[(i+4)%6] = {i; t3; t4}

i=7:
5{7;18;S} 0{7;S;S}
i=8:
5{8;7;S} 0{8;S;S} 1{8;S;S}

i=9:
0{9;8;S} 1{9;S;S}

i=17:
4{17;16;S} 5{17;S;S}
i=18:
4{18;17;S} 5{18;S;S} 0{18;S;S}

=> for i=7 TO 18:
ii = ((i-7)/2 + 5)%6
p = (i-19)%12 + 18
i[ii] = p[(ii+2)%6] = {i; p; S}
i[ii+1] = {i; S; S}
if (i even) i[ii+2] = {i; S; S}